plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'

    implementation "io.ktor:ktor-server-netty:1.3.1"
    implementation "org.jetbrains.exposed:exposed-core:0.22.1"
    implementation "org.jetbrains.exposed:exposed-dao:0.22.1"
    implementation "org.jetbrains.exposed:exposed-jdbc:0.22.1"
    implementation 'org.postgresql:postgresql:42.2.8'
    implementation "ch.qos.logback:logback-classic:1.2.3"
    implementation "com.zaxxer:HikariCP:2.7.8"
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation "io.ktor:ktor-gson:1.3.1"
    implementation 'args4j:args4j:2.33'
    testImplementation "com.squareup.okhttp:okhttp:2.5.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Server',
                'Implementation-Version': '1.0.0',
                'Main-Class': 'fed.MainKt'
    }
    archiveBaseName = 'server'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    with jar
}

task test(overwrite: true) {
    println("Please, run even test manualy")
}
